{"data":{"projects":{"nodes":[{"frontmatter":{"title":"tote","url":"https://tote.vercel.app/","techStack":"Next.js, Tailwinds","github":"https://github.com/macho-catt/tote","order":1},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"tote\",\n  \"url\": \"https://tote.vercel.app/\",\n  \"techStack\": \"Next.js, Tailwinds\",\n  \"github\": \"https://github.com/macho-catt/tote\",\n  \"order\": 1\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Tote (time + quote) displays a changing color background based on the current time\\nof the day. Each minute, the app displays a new quote.\"), mdx(\"p\", null, \"This app takes advantage of the SSR (server side rendering) feature of Next.js, where\\neach visit to the page makes an API request to zenquotes.io to retrieve a list\\nof fifty quotes to cycle from. When the cycle is finished, a new API request is made\\nto refresh the list.\"));\n}\n;\nMDXContent.isMDXComponent = true;","id":"7cab6b71-45f6-55a8-98df-27bf240b8745"},{"frontmatter":{"title":"Gyul! Hap!","url":"https://gyul-hap.vercel.app/","techStack":"Vue, Tailwinds","github":"https://github.com/macho-catt/gyul-hap","order":2},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Gyul! Hap!\",\n  \"url\": \"https://gyul-hap.vercel.app/\",\n  \"techStack\": \"Vue, Tailwinds\",\n  \"github\": \"https://github.com/macho-catt/gyul-hap\",\n  \"order\": 2\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Gyul! Hap! is based on a game from the Korean Show The Genius. It consists of a grid of nine tiles, where each tile is defined by a shape color, shape, and background color.\"), mdx(\"p\", null, \"A \\\"Hap\\\" is a set of three tiles where each property (shape color, shape, background color) is either all the same or all different between the three tiles.\"), mdx(\"p\", null, \"A \\\"Gyul\\\" can be called when all matches have been found (or in a rare instance, there were no matches initially), ending the game.\"));\n}\n;\nMDXContent.isMDXComponent = true;","id":"08d0207c-fefe-552a-83c3-3ffb19965530"},{"frontmatter":{"title":"Lucky Parking","url":"http://www.luckyparking.org","techStack":"React, Redux, Node.JS, SCSS","github":"https://github.com/hackforla/lucky-parking","order":3},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Lucky Parking\",\n  \"url\": \"http://www.luckyparking.org\",\n  \"techStack\": \"React, Redux, Node.JS, SCSS\",\n  \"github\": \"https://github.com/hackforla/lucky-parking\",\n  \"order\": 3\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Visualization of the parking citation tickets in the Los Angeles Metro Area.\"), mdx(\"p\", null, \"My current contributions include implementation of the new header and search component design,\\nmap zoom in/out based on selected area, frontend code bug fixes,\\nrestructuring of the backend code, dockerization of the Node.JS and PostgreSQL for development and data science,\\naddition of a CD process with GitHub Actions, addition of backend unit testing (to be added to the CI process),\\ncreation of the staging environment, and leading the efforts for restructuring the frontend code and implementation\\nof a new design.\"));\n}\n;\nMDXContent.isMDXComponent = true;","id":"76764d6f-b2cf-5c49-b53a-9c996ebb78da"}]}}}