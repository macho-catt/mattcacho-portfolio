{"data":{"projects":{"nodes":[{"frontmatter":{"title":"tote","url":"https://tote.vercel.app/","techStack":"Next.js, Tailwinds","github":"https://github.com/macho-catt/tote"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"tote\",\n  \"url\": \"https://tote.vercel.app/\",\n  \"techStack\": \"Next.js, Tailwinds\",\n  \"github\": \"https://github.com/macho-catt/tote\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Tote (time + quote) displays a changing color background based on the current time\\nof the day. Each minute, the app displays a new quote.\"), mdx(\"p\", null, \"This app takes advantage of the SSR (server side rendering) feature of Next.js, where\\neach visit to the page makes an API request to zenquotes.io to retrieve a list\\nof fifty quotes to cycle from. When the cycle is finished, a new API request is made\\nto refresh the list.\"));\n}\n;\nMDXContent.isMDXComponent = true;","id":"7cab6b71-45f6-55a8-98df-27bf240b8745"}]}}}